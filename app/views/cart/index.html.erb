<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Gi·ªè h√†ng</title>
  <%= csrf_meta_tags %>
  <%= stylesheet_link_tag 'cart', media: 'all' %>
</head>
<body>
  
  <div class="cart-container">
  <h1>Gi·ªè h√†ng c·ªßa b·∫°n</h1>

  <% if current_user.giohang.present? && !JSON.parse(current_user.giohang).empty? %>
    <% cart = JSON.parse(current_user.giohang) %>
    <% total_price = 0 %> <!-- Bi·∫øn l∆∞u t·ªïng gi√° tr·ªã ƒë∆°n h√†ng -->
    <table>
      <thead>
        <tr>
          <th class="sp">S·∫£n ph·∫©m</th>
          <th class="sl">S·ªë l∆∞·ª£ng</th>
          <th class="giac">Gi√°</th>
          <th class="giac"></th>
        </tr>
      </thead>
      <tbody>
        <% cart.each do |product_name, quantity| %>
          <% product = Sanpham.find_by(ten: product_name) %>
          <% product_price = (product.gia * quantity).round(2) %> <!-- T√≠nh gi√° t·ª´ng s·∫£n ph·∫©m -->
          <% total_price += product_price %> <!-- C·ªông v√†o t·ªïng gi√° -->

          <tr>
            <td>
              <div class="product-info">
                <img src="<%= asset_path(product.hinhanh) %>" alt="<%= product_name %>" class="product-image">
                <span><%= product_name %></span>
              </div>
            </td>
            <td class="sl">
              <% don_vi = product.donvi %> <!-- L·∫•y ƒë∆°n v·ªã c·ªßa s·∫£n ph·∫©m -->
              <span class="kg"><%= "#{quantity.to_i} #{don_vi}" %></span>
            </td>
            <td class="giac">
              <span class="price">
                <%= CurrencyFormatter.format_vnd(product_price) %>
              </span>
            </td>

            <td class="giac">
              <div class="quantity-actions">
                <button type="button" 
                    class="update-btn" 
                    data-product="<%= product_name %>" 
                    data-quantity="<%= quantity %>"
                    data-image="<%= asset_path(product.hinhanh) %>"
                    data-unit="<%= product.donvi %>"
                    onclick="openUpdateModal(this)">‚Ü∫
                </button>
                <button type="button" class="remove-btn" data-product="<%= product_name %>" title="X√≥a">
                  üóëÔ∏è
                </button>
              </div>
            </td>
          </tr>
        <% end %>
      </tbody>
      <tfoot>
        <tr>
          <td colspan="3" class="total-label">T·ªïng c·ªông:</td>
          <td class="total-price">
            <%= CurrencyFormatter.format_vnd(total_price) %>
          </td>
        </tr>
      </tfoot>
    </table>
  <% else %>
    <p class="empty-cart">Gi·ªè h√†ng c·ªßa b·∫°n hi·ªán ƒëang tr·ªëng.</p>
  <% end %>

  <% if current_user.giohang.present? && !JSON.parse(current_user.giohang).empty? %>
    <button>ƒê·∫∑t h√†ng</button>
  <% end %>
</div>


 <!-- Modal "C·∫≠p nh·∫≠t s·∫£n ph·∫©m" -->
<div id="updateProductModal" class="modal" style="display: none;">
  <div class="modal-contentt">
    <span class="close-button" onclick="closeUpdateProductModal()">√ó</span>
    <!-- Hi·ªÉn th·ªã s·∫£n ph·∫©m ƒë∆∞·ª£c ch·ªçn -->
    <div id="updateProductPreview">
      <img id="updateProductImage" src="" alt="S·∫£n ph·∫©m" class="product-image">
      <h3 id="updateProductName"></h3>
    </div>
    <!-- Thanh tr∆∞·ª£t ch·ªânh s·ª≠a s·ªë l∆∞·ª£ng -->
    <p>Ch·ªçn s·ªë l∆∞·ª£ng s·∫£n ph·∫©m b·∫°n mu·ªën c·∫≠p nh·∫≠t:</p>
    <input type="range" id="updateQuantitySlider" min="1" max="20" step="1" value="1" oninput="updateUpdateQuantityDisplay(this.value)" data-unit="kg">
    <p>S·ªë l∆∞·ª£ng: <span id="updateQuantityDisplay">1 kg</span></p>
    <%= button_tag 'X√°c nh·∫≠n', class: 'btn btn-primary confirm-btn', onclick: "confirmUpdateProduct()" %>
  </div>
</div>





<script>

  
  document.addEventListener("DOMContentLoaded", () => {
  document.querySelectorAll(".remove-btn").forEach((button) => {
    button.addEventListener("click", function () {
      const productName = this.getAttribute("data-product");

      // Hi·ªÉn th·ªã th√¥ng b√°o x√°c nh·∫≠n
      const confirmDelete = confirm(`B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a s·∫£n ph·∫©m "${productName}" kh·ªèi gi·ªè h√†ng kh√¥ng?`);

      if (confirmDelete) {
        // G·ª≠i y√™u c·∫ßu x√≥a s·∫£n ph·∫©m n·∫øu ng∆∞·ªùi d√πng x√°c nh·∫≠n
        fetch("/cart/remove_from_cart", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-CSRF-Token": document.querySelector("meta[name='csrf-token']").getAttribute("content")
          },
          body: JSON.stringify({ product_name: productName })
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.success) {
              // C·∫≠p nh·∫≠t giao di·ªán gi·ªè h√†ng
              alert("S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a kh·ªèi gi·ªè h√†ng!");
              location.reload(); // Refresh trang ƒë·ªÉ hi·ªÉn th·ªã gi·ªè h√†ng m·ªõi
            } else {
              alert(data.error || "C√≥ l·ªói x·∫£y ra khi x√≥a s·∫£n ph·∫©m.");
            }
          })
          .catch((error) => {
            console.error("Error:", error);
            alert("C√≥ l·ªói x·∫£y ra khi k·∫øt n·ªëi v·ªõi m√°y ch·ªß.");
          });
      }
    });
  });
});


  function openUpdateModal(button) {
    const productName = button.getAttribute("data-product");
    const productImage = button.getAttribute("data-image");
    const currentQuantity =parseInt(button.getAttribute("data-quantity"));
    const productUnit = button.getAttribute("data-unit"); // L·∫•y ƒë∆°n v·ªã s·∫£n ph·∫©m

    // C·∫≠p nh·∫≠t n·ªôi dung modal
    document.getElementById("updateProductName").textContent = productName;
    document.getElementById("updateProductImage").src = productImage;
    document.getElementById("updateQuantitySlider").value = currentQuantity;
    document.getElementById("updateQuantityDisplay").textContent = `${currentQuantity} ${productUnit}`; // Hi·ªÉn th·ªã s·ªë l∆∞·ª£ng v√† ƒë∆°n v·ªã

    // L∆∞u ƒë∆°n v·ªã v√†o thu·ªôc t√≠nh c·ªßa slider ƒë·ªÉ s·ª≠ d·ª•ng khi c·∫≠p nh·∫≠t
    document.getElementById("updateQuantitySlider").setAttribute("data-unit", productUnit);

    // Hi·ªÉn th·ªã modal
    document.getElementById("updateProductModal").style.display = "block";
  }


  // ƒê√≥ng modal c·∫≠p nh·∫≠t s·∫£n ph·∫©m
  function closeUpdateProductModal() {
    document.getElementById("updateProductModal").style.display = "none";
  }

  // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng hi·ªÉn th·ªã khi k√©o slider
  function updateUpdateQuantityDisplay(value) {
    const productUnit = document.getElementById("updateQuantitySlider").getAttribute("data-unit"); // L·∫•y ƒë∆°n v·ªã s·∫£n ph·∫©m
    const roundedValue = parseInt(value); // Chuy·ªÉn ƒë·ªïi s·ªë l∆∞·ª£ng th√†nh s·ªë nguy√™n
    document.getElementById("updateQuantityDisplay").textContent = `${roundedValue} ${productUnit}`;
  }


  // X√°c nh·∫≠n c·∫≠p nh·∫≠t s·∫£n ph·∫©m
  function confirmUpdateProduct() {
    const productName = document.getElementById("updateProductName").textContent;
    const newQuantity = document.getElementById("updateQuantitySlider").value;

    fetch("/cart/update_cart", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "X-CSRF-Token": document.querySelector("meta[name='csrf-token']").getAttribute("content")
      },
      body: JSON.stringify({ product_name: productName, quantity: newQuantity })
    })
      .then((response) => response.json())
      .then((data) => {
        if (data.success) {
          alert("S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!");
          location.reload(); // L√†m m·ªõi trang ƒë·ªÉ hi·ªÉn th·ªã gi·ªè h√†ng m·ªõi
        } else {
          alert(data.error || "C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t s·∫£n ph·∫©m.");
        }
      })
      .catch((error) => {
        console.error("Error:", error);
        alert("C√≥ l·ªói x·∫£y ra khi k·∫øt n·ªëi v·ªõi m√°y ch·ªß.");
      });

    closeUpdateProductModal(); // ƒê√≥ng modal
  }


</script>

</body>
</html>
